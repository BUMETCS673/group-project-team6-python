### pseudocode for swaping, using hill climbing algorithm ###

# step 1, randomly allocate all student to the the teams that instructor assigned
# init team_formation is a list of all teams objects, which contains the students.

team_formation = random_assign_team(all_studesnts,team_sizes) 



# For each pass (Instructor assigned)
for each pass:
    for first_team in team_formation[:-1]:
        for next_team in team_formation[first_team_index+1:]:
            for each student_A in first_team:
                for each student_B in second_team:

                    #find the min score between two teams
                    min_old_score = min(get_total_score(first_team), get_total_score(next_team))
                    
                    #swap team member
                    swap(student_A,student_B)
                    
                    #get the new min score between to teams after swaping
                    min_new_score = min(get_total_score(first_team), get_total_score(next_team))


                    # decide whether to keep the swap or unswap
                    if min_new_score > min_old_score:
                        #keep the swap, do nothing
                    else:
                        unswap(student_A,student_B)

return the team_formation

                
                    

